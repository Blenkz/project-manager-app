/**
 * This class is generated by jOOQ
 */
package org.jooq.ateamcomp354.projectmanagerapp.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.ateamcomp354.projectmanagerapp.DefaultSchema;
import org.jooq.ateamcomp354.projectmanagerapp.Keys;
import org.jooq.ateamcomp354.projectmanagerapp.tables.records.ProjectactivitiesRecord;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Projectactivities extends TableImpl<ProjectactivitiesRecord> {

	private static final long serialVersionUID = 2065503677;

	/**
	 * The reference instance of <code>projectActivities</code>
	 */
	public static final Projectactivities PROJECTACTIVITIES = new Projectactivities();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ProjectactivitiesRecord> getRecordType() {
		return ProjectactivitiesRecord.class;
	}

	/**
	 * The column <code>projectActivities.project_activities_id</code>.
	 */
	public final TableField<ProjectactivitiesRecord, Integer> PROJECT_ACTIVITIES_ID = createField("project_activities_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>projectActivities.project_id</code>.
	 */
	public final TableField<ProjectactivitiesRecord, Integer> PROJECT_ID = createField("project_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>projectActivities.activity_id</code>.
	 */
	public final TableField<ProjectactivitiesRecord, Integer> ACTIVITY_ID = createField("activity_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>projectActivities</code> table reference
	 */
	public Projectactivities() {
		this("projectActivities", null);
	}

	/**
	 * Create an aliased <code>projectActivities</code> table reference
	 */
	public Projectactivities(String alias) {
		this(alias, PROJECTACTIVITIES);
	}

	private Projectactivities(String alias, Table<ProjectactivitiesRecord> aliased) {
		this(alias, aliased, null);
	}

	private Projectactivities(String alias, Table<ProjectactivitiesRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ProjectactivitiesRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ProjectactivitiesRecord, ?>>asList(Keys.FK_PROJECTACTIVITIES_PROJECT_2, Keys.FK_PROJECTACTIVITIES_PROJECT_1, Keys.FK_PROJECTACTIVITIES_ACTIVITY_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Projectactivities as(String alias) {
		return new Projectactivities(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Projectactivities rename(String name) {
		return new Projectactivities(name, null);
	}
}
